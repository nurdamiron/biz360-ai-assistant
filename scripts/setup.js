#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ Biz360 CRM
 * –í—ã–ø–æ–ª–Ω—è–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:
 * 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
 * 2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
 * 3. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
 * 4. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
 * 5. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã
 */

const fs = require('fs').promises;
const fsSync = require('fs');
const path = require('path');
const { execSync, exec } = require('child_process');
const readline = require('readline');
const mysql = require('mysql2/promise');
const dotenv = require('dotenv');

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
dotenv.config();

// –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —á—Ç–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞
const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

// –ü—Ä–æ–º–∏—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≤–æ–ø—Ä–æ—Å–∞
const question = (query) => new Promise((resolve) => rl.question(query, resolve));

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
async function setupAssistant() {
  try {
    console.log('\n' + '='.repeat(80));
    console.log('–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ Biz360 CRM');
    console.log('='.repeat(80) + '\n');

    // –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    await checkDependencies();

    // –®–∞–≥ 2: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    await setupEnvironment();

    // –®–∞–≥ 3: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    await setupDatabase();

    // –®–∞–≥ 4: –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    await createDirectories();

    // –®–∞–≥ 5: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã
    await initializeComponents();

    console.log('\n' + '='.repeat(80));
    console.log('–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    console.log('='.repeat(80) + '\n');

    console.log('–î–ª—è –∑–∞–ø—É—Å–∫–∞ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:');
    console.log('  npm start');
    console.log('\n–î–ª—è –∑–∞–ø—É—Å–∫–∞ —Å —Ä–µ–∂–∏–º–æ–º –æ—Ç–ª–∞–¥–∫–∏:');
    console.log('  npm run dev');
    console.log('\n–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ README.md');

    rl.close();
  } catch (error) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ:', error.message);
    console.error('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫—É –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É —É—Å—Ç–∞–Ω–æ–≤–∫–∏.');
    rl.close();
    process.exit(1);
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
 * @returns {Promise<void>}
 */
async function checkDependencies() {
  console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...');

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é Node.js
    const nodeVersion = process.version;
    const majorVersion = parseInt(nodeVersion.slice(1).split('.')[0], 10);
    
    if (majorVersion < 14) {
      throw new Error(`–¢—Ä–µ–±—É–µ—Ç—Å—è Node.js –≤–µ—Ä—Å–∏–∏ 14 –∏–ª–∏ –≤—ã—à–µ. –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: ${nodeVersion}`);
    }
    
    console.log(`‚úÖ Node.js: ${nodeVersion}`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ npm
    execSync('npm --version', { stdio: ['ignore', 'ignore', 'ignore'] });
    console.log('‚úÖ npm —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Git
    try {
      execSync('git --version', { stdio: ['ignore', 'ignore', 'ignore'] });
      console.log('‚úÖ Git —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    } catch (error) {
      console.warn('‚ö†Ô∏è Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ MySQL
    try {
      execSync('mysql --version', { stdio: ['ignore', 'ignore', 'ignore'] });
      console.log('‚úÖ MySQL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    } catch (error) {
      console.warn('‚ö†Ô∏è MySQL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ PATH.');
      const installMySQL = await question('–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ MySQL? (y/n): ');
      if (installMySQL.toLowerCase() !== 'y') {
        throw new Error('–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ MySQL –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.');
      }
    }

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º npm –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    console.log('üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ npm –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...');
    execSync('npm install', { stdio: 'inherit' });
    console.log('‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ npm —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');

  } catch (error) {
    throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: ${error.message}`);
  }
}

/**
 * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
 * @returns {Promise<void>}
 */
async function setupEnvironment() {
  console.log('\nüìù –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...');

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
  const envPath = path.join(process.cwd(), '.env');
  let envExists = false;

  try {
    await fs.access(envPath);
    envExists = true;
    console.log('üìÑ –ù–∞–π–¥–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª .env');
  } catch (error) {
    console.log('üìÑ –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π');
  }

  if (envExists) {
    const overwrite = await question('–•–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª .env? (y/n): ');
    if (overwrite.toLowerCase() !== 'y') {
      console.log('‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª .env');
      return;
    }
  }

  // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
  console.log('\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:');
  
  const port = await question('–ü–æ—Ä—Ç –¥–ª—è API (3000): ');
  
  console.log('\n--- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö ---');
  const dbHost = await question('–•–æ—Å—Ç MySQL (localhost): ');
  const dbPort = await question('–ü–æ—Ä—Ç MySQL (3306): ');
  const dbUser = await question('–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è MySQL: ');
  const dbPassword = await question('–ü–∞—Ä–æ–ª—å MySQL: ');
  const dbName = await question('–ò–º—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (biz360_assistant): ');
  
  console.log('\n--- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ LLM API ---');
  const llmApiKey = await question('API –∫–ª—é—á –¥–ª—è LLM (Anthropic Claude): ');
  const llmModel = await question('–ú–æ–¥–µ–ª—å LLM (claude-3-opus-20240229): ');
  const llmApiUrl = await question('URL API LLM (https://api.anthropic.com): ');
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ .env —Ñ–∞–π–ª–∞
  const envContent = `
# –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
NODE_ENV=development
PORT=${port || '3000'}
LOG_LEVEL=info

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
DB_HOST=${dbHost || 'localhost'}
DB_PORT=${dbPort || '3306'}
DB_USER=${dbUser || 'root'}
DB_PASSWORD=${dbPassword || ''}
DB_NAME=${dbName || 'biz360_assistant'}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ LLM API
LLM_API_KEY=${llmApiKey || ''}
LLM_MODEL=${llmModel || 'claude-3-opus-20240229'}
LLM_API_URL=${llmApiUrl || 'https://api.anthropic.com'}
LLM_MAX_TOKENS=4000
LLM_TEMPERATURE=0.7
LLM_CACHE_ENABLED=true
LLM_CACHE_TTL=1800
LLM_MAX_RETRIES=3
LLM_RETRY_DELAY=1000

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Git
GIT_USERNAME=
GIT_TOKEN=
`.trim();

  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º .env —Ñ–∞–π–ª
  await fs.writeFile(envPath, envContent);
  console.log('‚úÖ –§–∞–π–ª .env —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω');
}

/**
 * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
 * @returns {Promise<void>}
 */
async function setupDatabase() {
  console.log('\nüóÑÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');

  // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–∑ .env
  const dbHost = process.env.DB_HOST || 'localhost';
  const dbPort = parseInt(process.env.DB_PORT || '3306', 10);
  const dbUser = process.env.DB_USER || 'root';
  const dbPassword = process.env.DB_PASSWORD || '';
  const dbName = process.env.DB_NAME || 'biz360_assistant';

  try {
    // –°–æ–∑–¥–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    const connection = await mysql.createConnection({
      host: dbHost,
      port: dbPort,
      user: dbUser,
      password: dbPassword,
      multipleStatements: false // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤ false, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    });

    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MySQL —Å–µ—Ä–≤–µ—Ä—É');

    // –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    await connection.execute(`CREATE DATABASE IF NOT EXISTS \`${dbName}\``);
    console.log(`‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö "${dbName}" —Å–æ–∑–¥–∞–Ω–∞ –∏–ª–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);

    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Å–æ–∑–¥–∞–Ω–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    await connection.query(`USE \`${dbName}\``);

    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü
    console.log('üìä –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü...');
    try {
      // –°—á–∏—Ç—ã–≤–∞–µ–º SQL —Å–∫—Ä–∏–ø—Ç
      const schemaPath = path.join(process.cwd(), 'scripts', 'schema.sql');
      const schemaSql = await fs.readFile(schemaPath, 'utf8');

      // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å—ã –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞ –ø–æ –æ–¥–Ω–æ–º—É
      const queries = schemaSql
        .split(';')
        .filter(query => query.trim().length > 0)
        .map(query => query.trim() + ';');
      
      for (const query of queries) {
        try {
          // –ò—Å–ø–æ–ª—å–∑—É–µ–º query –≤–º–µ—Å—Ç–æ execute –¥–ª—è DDL –∑–∞–ø—Ä–æ—Å–æ–≤
          await connection.query(query);
        } catch (queryError) {
          console.warn(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞: ${queryError.message}`);
          console.warn('–ó–∞–ø—Ä–æ—Å:', query.substring(0, 100) + '...');
          // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –¥–∞–∂–µ –µ—Å–ª–∏ –æ—Ç–¥–µ–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª—Å—è
          // –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        }
      }

      console.log('‚úÖ –¢–∞–±–ª–∏—Ü—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã');
    } catch (error) {
      throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü: ${error.message}`);
    }

    // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    await connection.end();
    console.log('üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ');

  } catch (error) {
    throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: ${error.message}`);
  }
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
 * @returns {Promise<void>}
 */
async function createDirectories() {
  console.log('\nüìÅ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π...');

  const directories = [
    path.join(process.cwd(), 'data'),
    path.join(process.cwd(), 'data', 'insights'),
    path.join(process.cwd(), 'data', 'improved_prompts'),
    path.join(process.cwd(), 'data', 'cache'),
    path.join(process.cwd(), 'logs'),
    path.join(process.cwd(), 'templates'),
    path.join(process.cwd(), 'templates', 'prompts')
  ];

  for (const dir of directories) {
    try {
      await fs.mkdir(dir, { recursive: true });
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${path.relative(process.cwd(), dir)}`);
    } catch (error) {
      throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ ${dir}: ${error.message}`);
    }
  }

  // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª .gitkeep –≤ –ø—É—Å—Ç—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ö
  for (const dir of directories) {
    const gitkeepPath = path.join(dir, '.gitkeep');
    try {
      await fs.writeFile(gitkeepPath, '');
    } catch (error) {
      console.warn(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª .gitkeep –≤ ${dir}`);
    }
  }
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã
 * @returns {Promise<void>}
 */
async function initializeComponents() {
  console.log('\nüöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã...');

  // –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã –ø—Ä–æ–º–ø—Ç–æ–≤
  await createPromptTemplates();

  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç
  const createTestProject = await question('–°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏? (y/n): ');
  
  if (createTestProject.toLowerCase() === 'y') {
    await createDemoProject();
  }

  console.log('‚úÖ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –±–∞–∑–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã –ø—Ä–æ–º–ø—Ç–æ–≤
 * @returns {Promise<void>}
 */
async function createPromptTemplates() {
  console.log('üìù –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤ –ø—Ä–æ–º–ø—Ç–æ–≤...');

  const templatesDir = path.join(process.cwd(), 'templates', 'prompts');

  // –®–∞–±–ª–æ–Ω –¥–ª—è –¥–µ–∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ –∑–∞–¥–∞—á
  const taskDecompositionTemplate = `
# –î–µ–∫–æ–º–ø–æ–∑–∏—Ü–∏—è –∑–∞–¥–∞—á–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

–¢—ã - –æ–ø—ã—Ç–Ω—ã–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç —Ä–∞–∑–±–∏–≤–∞—Ç—å —Å–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏ –Ω–∞ –ø–æ–¥–∑–∞–¥–∞—á–∏.

## –ü—Ä–æ–µ–∫—Ç
–ù–∞–∑–≤–∞–Ω–∏–µ: {projectName}
–û–ø–∏—Å–∞–Ω–∏–µ: {projectDescription}

## –ó–∞–¥–∞—á–∞ –¥–ª—è –¥–µ–∫–æ–º–ø–æ–∑–∏—Ü–∏–∏
–ù–∞–∑–≤–∞–Ω–∏–µ: {taskTitle}
–û–ø–∏—Å–∞–Ω–∏–µ: {taskDescription}

## –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
1. –†–∞–∑–±–µ–π —ç—Ç—É –∑–∞–¥–∞—á—É –Ω–∞ 3-7 –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–¥–∑–∞–¥–∞—á, –∫–∞–∂–¥–∞—è –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —á–µ—Ç–∫–∏–π —à–∞–≥ –≤ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–±—â–µ–π –∑–∞–¥–∞—á–∏.
2. –ü–æ–¥–∑–∞–¥–∞—á–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏, –≤—ã–ø–æ–ª–Ω–∏–º—ã–º–∏ –∏ –ª–æ–≥–∏—á–µ—Å–∫–∏ —Å–≤—è–∑–∞–Ω–Ω—ã–º–∏.
3. –ü–æ–¥–∑–∞–¥–∞—á–∏ –¥–æ–ª–∂–Ω—ã —Å–ª–µ–¥–æ–≤–∞—Ç—å –≤ –ø–æ—Ä—è–¥–∫–µ, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–º –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–±—â–µ–π –∑–∞–¥–∞—á–∏.
4. –ö–∞–∂–¥–∞—è –ø–æ–¥–∑–∞–¥–∞—á–∞ –¥–æ–ª–∂–Ω–∞ –∏–º–µ—Ç—å —á–µ—Ç–∫–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≥–æ, —á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å.

## –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞
–í—ã–¥–∞–π –ø–æ–¥–∑–∞–¥–∞—á–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:

SUBTASK: [–ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ–¥–∑–∞–¥–∞—á–∏ 1]
DESCRIPTION: [–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–¥–∑–∞–¥–∞—á–∏ 1]

SUBTASK: [–ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ–¥–∑–∞–¥–∞—á–∏ 2]
DESCRIPTION: [–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–¥–∑–∞–¥–∞—á–∏ 2]

–ò —Ç–∞–∫ –¥–∞–ª–µ–µ –¥–ª—è –∫–∞–∂–¥–æ–π –ø–æ–¥–∑–∞–¥–∞—á–∏.
`;

  // –®–∞–±–ª–æ–Ω –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–¥–∞
  const codeGenerationTemplate = `
# –ó–∞–¥–∞—á–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–¥–∞
–¢—ã - –æ–ø—ã—Ç–Ω—ã–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ Node.js/Express, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–¥ –ø—Ä–æ–µ–∫—Ç–æ–º Biz360 CRM.

## –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –∑–∞–¥–∞—á–µ
{taskDescription}

## –ö–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–æ–µ–∫—Ç–∞
{projectContext}

## –†–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ —Ñ–∞–π–ª—ã
{relevantFiles}

## –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
{dbSchema}

## –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏
{architectureNotes}

## –°—Ç–∏–ª—å –∫–æ–¥–∞
{codeStyle}

## –ó–∞–¥–∞–Ω–∏–µ
–ù–∞–ø–∏—à–∏ {fileType} –∫–æ–¥ –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π. 
–¢–≤–æ–π –∫–æ–¥ –¥–æ–ª–∂–µ–Ω —Å–ª–µ–¥–æ–≤–∞—Ç—å —Å—Ç–∏–ª—é –ø—Ä–æ–µ–∫—Ç–∞ –∏ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π.
–ö–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–Ω—ã–º, —Ä–∞–±–æ—á–∏–º –∏ —Ö–æ—Ä–æ—à–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º.
–ò—Å–ø–æ–ª—å–∑—É–π –Ω–∞–∏–ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–π –æ—à–∏–±–∫–∏ –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä—É–π –∫–æ–¥.
`;

  // –®–∞–±–ª–æ–Ω –¥–ª—è —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞ –∫–æ–¥–∞
  const codeRefactoringTemplate = `
# –ó–∞–¥–∞—á–∞ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞
–¢—ã - –æ–ø—ã—Ç–Ω—ã–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ Node.js/Express, —Ä–∞–±–æ—Ç–∞—é—â–∏–π –Ω–∞–¥ —É–ª—É—á—à–µ–Ω–∏–µ–º –ø—Ä–æ–µ–∫—Ç–∞ Biz360 CRM.

## –ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –¥–ª—è —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞
\`\`\`javascript
{originalCode}
\`\`\`

## –ü—Ä–æ–±–ª–µ–º—ã –≤ –∫–æ–¥–µ
{codeIssues}

## –ö–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–æ–µ–∫—Ç–∞
{projectContext}

## –†–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ —Ñ–∞–π–ª—ã
{relevantFiles}

## –ó–∞–¥–∞–Ω–∏–µ
–í—ã–ø–æ–ª–Ω–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –¥–∞–Ω–Ω–æ–≥–æ –∫–æ–¥–∞, —É—Å—Ç—Ä–∞–Ω–∏–≤ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ —É–ª—É—á—à–∏–≤ –µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–æ.
–°–æ—Ö—Ä–∞–Ω–∏ —Ç–µ–∫—É—â—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å, –Ω–æ —Å–¥–µ–ª–∞–π –∫–æ–¥ –±–æ–ª–µ–µ —á–∏—Ç–∞–µ–º—ã–º, —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–º –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–º.
–°–ª–µ–¥—É–π –ø—Ä–∏–Ω—Ü–∏–ø–∞–º SOLID, DRY –∏ –¥—Ä—É–≥–∏–º –ª—É—á—à–∏–º –ø—Ä–∞–∫—Ç–∏–∫–∞–º.
`;

  // –®–∞–±–ª–æ–Ω –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫
  const bugFixTemplate = `
# –ó–∞–¥–∞—á–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏
–¢—ã - –æ–ø—ã—Ç–Ω—ã–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ Node.js/Express, —Ä–∞–±–æ—Ç–∞—é—â–∏–π –Ω–∞–¥ –ø—Ä–æ–µ–∫—Ç–æ–º Biz360 CRM.

## –û–ø–∏—Å–∞–Ω–∏–µ –æ—à–∏–±–∫–∏
{bugDescription}

## –ö–æ–¥ —Å –æ—à–∏–±–∫–æ–π
\`\`\`javascript
{buggyCode}
\`\`\`

## –õ–æ–≥–∏ –∏ —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∞
{logs}

## –†–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ —Ñ–∞–π–ª—ã
{relevantFiles}

## –ó–∞–¥–∞–Ω–∏–µ
–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –æ—à–∏–±–∫—É –∏ –ø—Ä–µ–¥–ª–æ–∂–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ.
–û–ø–∏—à–∏, –≤ —á—ë–º –ø—Ä–∏—á–∏–Ω–∞ –æ—à–∏–±–∫–∏ –∏ –ø–æ—á–µ–º—É —Ç–≤–æ–µ —Ä–µ—à–µ–Ω–∏–µ –µ–µ —É—Å—Ç—Ä–∞–Ω—è–µ—Ç.
–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å –ø–æ–ª–Ω—É—é –≤–µ—Ä—Å–∏—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞.
`;

  // –®–∞–±–ª–æ–Ω –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤
  const testGenerationTemplate = `
# –ó–∞–¥–∞—á–∞: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è –∫–æ–¥–∞

## –û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
{taskDescription}

## –ö–æ–¥ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
\`\`\`javascript
{code}
\`\`\`

## –§—Ä–µ–π–º–≤–æ—Ä–∫ –∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Ç–µ—Å—Ç–∞–º
- –ò—Å–ø–æ–ª—å–∑—É–π Jest –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
- –í–∫–ª—é—á–∏ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–º–ø–æ—Ä—Ç—ã, –≤–∫–ª—é—á–∞—è –º–æ–¥—É–ª—å, –∫–æ—Ç–æ—Ä—ã–π —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç—Å—è
- –ò—Å–ø–æ–ª—å–∑—É–π describe/it/test –±–ª–æ–∫–∏ –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤
- –ò—Å–ø–æ–ª—å–∑—É–π expect —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ –º–∞—Ç—á–µ—Ä–∞–º–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–æ–∫
- –ò—Å–ø–æ–ª—å–∑—É–π –º–æ–∫–∏ (jest.mock) –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
- –¢–µ—Å—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∏—Å—á–µ—Ä–ø—ã–≤–∞—é—â–∏–º–∏ –∏ –ø–æ–∫—Ä—ã–≤–∞—Ç—å —É—Å–ø–µ—à–Ω—ã–µ –∏ –æ—à–∏–±–æ—á–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏

## –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
- –¢–µ—Å—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–º–∏ –∏ –Ω–µ —Ç—Ä–µ–±–æ–≤–∞—Ç—å –≤–Ω–µ—à–Ω–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
- –ò—Å–ø–æ–ª—å–∑—É–π –º–æ–∫–∏ –¥–ª—è —Å–µ—Ç–µ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤, –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö –∏ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
- –ü–∏—à–∏ —Ç–µ—Å—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–≤–µ—Ä—è—é—Ç –∫–∞–∫ —É—Å–ø–µ—à–Ω—ã–µ, —Ç–∞–∫ –∏ –æ—à–∏–±–æ—á–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏
- –ö–æ–º–º–µ–Ω—Ç–∏—Ä—É–π —Ç–µ—Å—Ç—ã –¥–ª—è –æ–±—ä—è—Å–Ω–µ–Ω–∏—è, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –æ–Ω–∏ –ø—Ä–æ–≤–µ—Ä—è—é—Ç
- –ü—Ä–µ–¥—É—Å–º–æ—Ç—Ä–∏ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–ª—É—á–∞–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è, –≤–∫–ª—é—á–∞—è –≥—Ä–∞–Ω–∏—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è

–°–æ–∑–¥–∞–π –ø–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä —Ç–µ—Å—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å –ø–æ–º–æ—â—å—é Jest.
–û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –∫–æ–¥ —Ç–µ—Å—Ç–æ–≤ –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ—è—Å–Ω–µ–Ω–∏–π.
`;

  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —à–∞–±–ª–æ–Ω—ã
  await fs.writeFile(path.join(templatesDir, 'task-decomposition.txt'), taskDecompositionTemplate.trim());
  await fs.writeFile(path.join(templatesDir, 'code-generation.txt'), codeGenerationTemplate.trim());
  await fs.writeFile(path.join(templatesDir, 'code-refactoring.txt'), codeRefactoringTemplate.trim());
  await fs.writeFile(path.join(templatesDir, 'bug-fix.txt'), bugFixTemplate.trim());
  await fs.writeFile(path.join(templatesDir, 'test-generation.txt'), testGenerationTemplate.trim());

  console.log('‚úÖ –ë–∞–∑–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã –ø—Ä–æ–º–ø—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω—ã');
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –¥–µ–º–æ-–ø—Ä–æ–µ–∫—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 * @returns {Promise<void>}
 */
async function createDemoProject() {
  console.log('üß™ –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ-–ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...');

  try {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const dbHost = process.env.DB_HOST || 'localhost';
    const dbPort = parseInt(process.env.DB_PORT || '3306', 10);
    const dbUser = process.env.DB_USER || 'root';
    const dbPassword = process.env.DB_PASSWORD || '';
    const dbName = process.env.DB_NAME || 'biz360_assistant';

    const connection = await mysql.createConnection({
      host: dbHost,
      port: dbPort,
      user: dbUser,
      password: dbPassword,
      database: dbName
    });

    // –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ-–ø—Ä–æ–µ–∫—Ç
    const [projectResult] = await connection.execute(
      'INSERT INTO projects (name, repository_url, description) VALUES (?, ?, ?)',
      [
        'Biz360 CRM Demo', 
        '/path/to/demo/repository', 
        '–î–µ–º–æ-–ø—Ä–æ–µ–∫—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞'
      ]
    );

    const projectId = projectResult.insertId;
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω –¥–µ–º–æ-–ø—Ä–æ–µ–∫—Ç —Å ID: ${projectId}`);

    // –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–µ–º–æ-–∑–∞–¥–∞—á
    const tasks = [
      {
        title: '–°–æ–∑–¥–∞—Ç—å –º–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
        description: '–†–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å –º–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø–æ–ª—è–º–∏ –¥–ª—è –∏–º–µ–Ω–∏, email, —Ä–æ–ª–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫. –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥—ã –¥–ª—è CRUD –æ–ø–µ—Ä–∞—Ü–∏–π –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö.',
        priority: 'high'
      },
      {
        title: '–†–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å API –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞–º–∏',
        description: '–°–æ–∑–¥–∞—Ç—å REST API –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞–º–∏: –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞, –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ. –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –∏ –ø–∞–≥–∏–Ω–∞—Ü–∏—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.',
        priority: 'medium'
      },
      {
        title: '–ò—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫—É –≤ –º–æ–¥—É–ª–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏',
        description: '–ü—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –æ—à–∏–±–∫–∞ 500. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞–ø—Ä–æ—Å–∞ –∏ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é email.',
        priority: 'critical'
      }
    ];

    for (const task of tasks) {
      const [taskResult] = await connection.execute(
        'INSERT INTO tasks (project_id, title, description, status, priority) VALUES (?, ?, ?, ?, ?)',
        [projectId, task.title, task.description, 'pending', task.priority]
      );

      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–µ–º–æ-–∑–∞–¥–∞—á–∞ "${task.title}" —Å ID: ${taskResult.insertId}`);
    }

    await connection.end();
    console.log('‚úÖ –î–µ–º–æ-–ø—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–µ–º–æ-–ø—Ä–æ–µ–∫—Ç–∞:', error.message);
    console.warn('‚ö†Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É –±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–º–æ-–ø—Ä–æ–µ–∫—Ç–∞');
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏
setupAssistant();