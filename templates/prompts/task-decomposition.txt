// Добавляем новый шаблон промпта для улучшенной декомпозиции задач
// src/templates/prompts/task-decomposition.txt
Декомпозируй задачу на подзадачи, учитывая контекст проекта и предварительный анализ.

ИНФОРМАЦИЯ О ЗАДАЧЕ:
ID задачи: {{taskId}}
Название задачи: {{taskTitle}}
Описание задачи: {{taskDescription}}
Приоритет: {{taskPriority}}

КОНТЕКСТ ПРОЕКТА:
{{#if projectContext.repositoryStructure}}
Структура репозитория:
{{projectContext.repositoryStructure}}
{{/if}}

{{#if projectContext.technologies}}
Используемые технологии:
{{#each projectContext.technologies}}
- {{this}}
{{/each}}
{{/if}}

{{#if projectContext.codeExamples}}
Примеры кода в проекте:
{{projectContext.codeExamples}}
{{/if}}

ПРЕДВАРИТЕЛЬНЫЙ АНАЛИЗ:
Сложность: {{taskAnalysis.complexity}}
Требуемые навыки: {{taskAnalysis.requiredSkills}}
Потенциальные сложности: {{taskAnalysis.potentialChallenges}}
Оценка трудоемкости: {{taskAnalysis.estimatedEffort}}
Краткое описание: {{taskAnalysis.summary}}

ИНСТРУКЦИИ:
1. Разбей задачу на логические подзадачи (не более {{maxSubtasks}}).
2. Для каждой подзадачи:
   - Укажи точное название
   - Добавь подробное описание
   - Оцени трудоемкость в часах
   - Определи приоритет (high, medium, low)
   - Укажи зависимости от других подзадач (номера или пустой массив)
   - Перечисли необходимые навыки
   - Перечисли файлы кода, которые будут затронуты
   - Укажи, требуются ли тесты (true/false)
3. Учти используемые в проекте технологии и структуру репозитория
4. Логически упорядочи подзадачи от первых (базовых) до финальных

СТРАТЕГИЯ ТЕСТИРОВАНИЯ:
{{testingStrategy}}

ВЫХОДНОЙ ФОРМАТ:
Ответ предоставь в виде JSON следующей структуры:
{
  "subtasks": [
    {
      "title": "Название подзадачи",
      "description": "Подробное описание",
      "estimatedHours": число,
      "priority": "high|medium|low",
      "dependencies": [массив идентификаторов подзадач от 0 до N-1],
      "skills": ["навык1", "навык2", ...],
      "codeFiles": ["путь/к/файлу1.js", "путь/к/файлу2.js", ...],
      "testCoverage": true|false
    },
    ...
  ]
}

// src/templates/prompts/task-analysis.txt
Проанализируй задачу и предоставь структурированную информацию о её свойствах.

ИНФОРМАЦИЯ О ЗАДАЧЕ:
ID задачи: {{taskId}}
Название задачи: {{taskTitle}}
Описание задачи: {{taskDescription}}
Приоритет: {{taskPriority}}
Статус: {{taskStatus}}
Дата создания: {{taskCreatedAt}}

{{#if comments.length}}
КОММЕНТАРИИ К ЗАДАЧЕ:
{{#each comments}}
[{{createdAt}}] {{content}}
{{/each}}
{{/if}}

ИНСТРУКЦИИ:
1. Проанализируй сложность задачи (low, medium, high, very high)
2. Определи необходимые навыки для выполнения задачи
3. Опиши потенциальные сложности или проблемы
4. Оцени общую трудоемкость (low, medium, high, very high)
5. Приведи краткое описание сути задачи своими словами
6. Определи, к какому типу относится задача (new feature, bug fix, refactoring, etc)
7. Выдели ключевые требования из описания

ВЫХОДНОЙ ФОРМАТ:
Ответ предоставь в виде JSON следующей структуры:
{
  "complexity": "low|medium|high|very high",
  "requiredSkills": ["навык1", "навык2", ...],
  "potentialChallenges": ["сложность1", "сложность2", ...],
  "estimatedEffort": "low|medium|high|very high",
  "summary": "Суть задачи в одном абзаце",
  "taskType": "new feature|bug fix|refactoring|documentation|testing|...",
  "keyRequirements": ["требование1", "требование2", ...]
}

// src/templates/prompts/technology-identification.txt
Определи технологии, необходимые для выполнения задачи, на основе её описания и контекста проекта.

ИНФОРМАЦИЯ О ЗАДАЧЕ:
Название задачи: {{taskTitle}}
Описание задачи: {{taskDescription}}

КОНТЕКСТ ПРОЕКТА:
{{#if projectTechnologies.length}}
Используемые в проекте технологии:
{{#each projectTechnologies}}
- {{this}}
{{/each}}
{{/if}}

{{#if repositoryStructure}}
Структура репозитория:
{{repositoryStructure}}
{{/if}}

ИНСТРУКЦИИ:
1. Проанализируй описание задачи и определи, какие технологии потребуются для её реализации
2. Учти уже используемые в проекте технологии
3. Укажи конкретные языки программирования, фреймворки, библиотеки и инструменты
4. Отсортируй технологии по значимости для задачи (от наиболее важных к менее важным)
5. Если задача требует новых технологий, не используемых в проекте, отметь их как "new"

ВЫХОДНОЙ ФОРМАТ:
Ответ предоставь в виде JSON следующей структуры:
{
  "technologies": [
    {
      "name": "Название технологии",
      "category": "language|framework|library|tool|database|other",
      "importance": "critical|high|medium|low",
      "isNewToProject": true|false,
      "reason": "Почему эта технология необходима"
    },
    ...
  ]
}

// src/templates/prompts/requirements-extraction.txt
Извлеки структурированные требования из описания задачи.

ИНФОРМАЦИЯ О ЗАДАЧЕ:
Название задачи: {{taskTitle}}
Описание задачи: {{taskDescription}}

ИНСТРУКЦИИ:
1. Внимательно проанализируй описание задачи
2. Выдели функциональные требования (что система должна делать)
3. Определи нефункциональные требования (производительность, безопасность, удобство использования)
4. Выяви ограничения и условия, которые должны быть соблюдены
5. Приоритизируй требования по важности
6. Определи точки неопределенности или противоречия в требованиях

ВЫХОДНОЙ ФОРМАТ:
Ответ предоставь в виде JSON следующей структуры:
{
  "functional": [
    {
      "description": "Описание требования",
      "priority": "must-have|should-have|nice-to-have",
      "clarity": "clear|ambiguous"
    },
    ...
  ],
  "nonFunctional": [
    {
      "type": "performance|security|usability|reliability|...",
      "description": "Описание требования",
      "priority": "must-have|should-have|nice-to-have"
    },
    ...
  ],
  "constraints": [
    {
      "description": "Описание ограничения",
      "type": "technical|business|legal|resource"
    },
    ...
  ],
  "uncertainties": [
    "Описание неопределенности или противоречия"
  ]
}

// src/templates/prompts/task-recommendations.txt
Предоставь рекомендации и советы для выполнения задачи на основе анализа и контекста проекта.

ИНФОРМАЦИЯ О ЗАДАЧЕ:
Название задачи: {{taskTitle}}
Описание задачи: {{taskDescription}}

АНАЛИЗ ЗАДАЧИ:
Сложность: {{taskAnalysis.complexity}}
Требуемые навыки: {{taskAnalysis.requiredSkills}}
Потенциальные сложности: {{taskAnalysis.potentialChallenges}}
Оценка трудоемкости: {{taskAnalysis.estimatedEffort}}
Тип задачи: {{taskAnalysis.taskType}}
Ключевые требования: {{taskAnalysis.keyRequirements}}

КОНТЕКСТ ПРОЕКТА:
{{#if projectContext.technologies}}
Используемые технологии:
{{#each projectContext.technologies}}
- {{this}}
{{/each}}
{{/if}}

{{#if projectContext.repositoryStructure}}
Структура репозитория:
{{projectContext.repositoryStructure}}
{{/if}}

ИНСТРУКЦИИ:
1. Предложи оптимальный подход к решению задачи
2. Укажи потенциальные ресурсы, которые могут помочь (документация, статьи, библиотеки)
3. Предложи шаблон или структуру решения
4. Обозначь возможные "подводные камни" и как их обойти
5. Укажи необходимые проверки и тесты для подтверждения корректности решения
6. Предложи альтернативные подходы, если применимо

ВЫХОДНОЙ ФОРМАТ:
Ответ предоставь в виде JSON следующей структуры:
{
  "suggestedApproach": "Описание рекомендуемого подхода",
  "resources": [
    {
      "type": "documentation|article|library|example",
      "title": "Название ресурса",
      "description": "Краткое описание",
      "url": "URL ресурса (если применимо)"
    },
    ...
  ],
  "solutionStructure": "Описание предлагаемой структуры решения",
  "potentialPitfalls": [
    {
      "description": "Описание проблемы",
      "mitigation": "Способ избежать или решить проблему"
    },
    ...
  ],
  "verificationSteps": [
    "Шаг проверки 1",
    "Шаг проверки 2",
    ...
  ],
  "alternativeApproaches": [
    {
      "description": "Описание альтернативного подхода",
      "pros": ["Преимущество 1", "Преимущество 2", ...],
      "cons": ["Недостаток 1", "Недостаток 2", ...]
    },
    ...
  ],
  "warnings": [
    "Важное предупреждение или примечание"
  ]
}